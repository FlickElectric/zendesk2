{"name":"Zendesk2","tagline":"Zendesk API V2 client using Cistern","body":"# Zendesk2\r\n\r\n[![Build Status](https://secure.travis-ci.org/lanej/zendesk2.png)](http://travis-ci.org/lanej/zendesk2)\r\n[![Gem Version](https://fury-badge.herokuapp.com/rb/zendesk2.png)](http://badge.fury.io/rb/zendesk2)\r\n[![Code Climate](https://codeclimate.com/badge.png)](https://codeclimate.com/github/lanej/zendesk2)\r\n[![Dependency Status](https://gemnasium.com/lanej/zendesk2.png)](https://gemnasium.com/lanej/zendesk2)\r\n\r\nRuby client for the [Zendesk V2 API](http://developer.zendesk.com/documentation/rest_api/introduction.html) using [cistern](https://github.com/lanej/cistern) and [faraday](https://github.com/technoweenie/faraday)\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n```ruby\r\ngem 'zendesk2'\r\n```\r\nOr install it yourself as:\r\n\r\n    $ gem install zendesk2\r\n\r\n## Usage\r\n\r\n### Mock it!\r\n\r\nAll support resources have basic mocks.  Error conditions and messaging are constantly changing. Please contribute updates or fixes to the mock if you encounter inconsistencies.\r\n\r\n```ruby\r\nZendesk2::Client.mock!\r\n\r\nclient = Zendesk2::Client.new(...) # Zendesk2::Client::Mock\r\nclient.organizations.create!(name: \"foo\") # Zendesk2::Client::Organization\r\nclient.organizations.create!(name: \"foo\") # Zendesk2::Error => Name has already been taken\r\n```\r\n\r\n### Defaults\r\n\r\nDefault credentials will be read in from `~/.zendesk2` file in YAML format.\r\n\r\n```yaml\r\n---\r\n:url: https://www.zendesk.com\r\n:username: zendeskedge@example.com\r\n:password: wickedsecurepassword\r\n:token: reallylongrandomstringprovidedbyzendesk\r\n```\r\n\r\n### Creating the client\r\n\r\nUrl is always required. Username and either password or token are always required.\r\n\r\n```ruby\r\nZendesk2::Client.new(url: \"http://support.cloud.engineyard.com\", username: \"mate\", token: \"asdfghjkl1qwertyuiop5zxcvbnm3\")\r\n=> #<Zendesk2::Client::Real:0x007fd1bae486b0 @url=\"http://support.cloud.engineyard.com\", @username=\"mate\", @token=\"asdfghjkl1qwertyuiop5zxcvbnm3\", â€¦>\r\n```\r\n\r\n### Resources\r\n\r\n#### Collections\r\n\r\nCurrently support resources\r\n\r\n* Audit Events\r\n* Categories\r\n* Forums\r\n* Groups\r\n* Memberships\r\n* Organization\r\n* Ticket Audits\r\n* Ticket Fields\r\n* Tickets\r\n* Topic Comments\r\n* Topics\r\n* User Identities\r\n* User Fields\r\n* Users\r\n\r\nAll collection are accessed like so:\r\n\r\n```ruby\r\nclient.users.all\r\n=> <Zendesk2::Client::Users\r\n  count=1779,\r\n  next_page_link=\"https://dev.zendesk.com/api/v2/users.json?page=2\",\r\n  previous_page_link=nil\r\n  [\r\n    <Zendesk2::Client::User\r\n      id=125394183,\r\n      url=\"https://dev.zendesk.com/api/v2/users/125394183.json\",\r\n      ...\r\n    >\r\n  ]\r\n```\r\n\r\nCollections also respond to `create` and `new`\r\n\r\n```ruby\r\nclient.users.create(email: \"ohhai@example.org\", name: \"lulz\")\r\n=> <Zendesk2::Client::User\r\n  id=234020811,\r\n  ...\r\n  url=\"https://engineyarddev.zendesk.com/api/v2/users/234020811.json\",\r\n  ...\r\n  email=\"ohhai@example.org\",\r\n  >\r\n```\r\n\r\n```ruby\r\nclient.users.new(email: \"ohhai@example.org\")\r\n=> <Zendesk2::Client::User\r\n  id=nil,\r\n  ...\r\n  url=nil,\r\n  ...\r\n  email=\"ohhai@example.org\",\r\n  ...\r\n  >\r\n```\r\n\r\n#### Paging\r\n\r\nPaged collections respond to `next_page` and `previous_page` when appropriate.  `page_size` and `page` can be passed directly to the collection to control size and index.\r\n\r\n```ruby\r\npage = client.users.all(\"per_page\" => 1, \"page\" => 4)\r\n=> <Zendesk2::Client::Users\r\n  count=1780,\r\n  next_page_link=\"https://dev.zendesk.com/api/v2/users.json?page=5&per_page=1\",\r\n  previous_page_link=\"https://dev.zendesk.com/api/v2/users.json?page=3&per_page=1\"\r\n  [\r\n    <Zendesk2::Client::User\r\n      id=217761652,\r\n      url=\"https://dev.zendesk.com/api/v2/users/217761652.json\",\r\n      external_id=nil,\r\n      name=\"Guy Dude\",\r\n      ...\r\n    >\r\n  ]\r\n```\r\n\r\n```ruby\r\npage.next_page\r\n=> <Zendesk2::Client::Users\r\n  count=1780,\r\n  next_page_link=\"https://dev.zendesk.com/api/v2/users.json?page=6&per_page=1\",\r\n  previous_page_link=\"https://dev.zendesk.com/api/v2/users.json?page=4&per_page=1\"\r\n  [\r\n    <Zendesk2::Client::User\r\n      id=217761742,\r\n      url=\"https://dev.zendesk.com/api/v2/users/217761742.json\",\r\n      ...\r\n      name=\"epitaphical osteofibrous\",\r\n      ...\r\n    >\r\n  ]\r\n```\r\n\r\n```ruby\r\npage.previous_page\r\n=> <Zendesk2::Client::Users\r\n  count=1780,\r\n  next_page_link=\"https://dev.zendesk.com/api/v2/users.json?page=5&per_page=1\",\r\n  previous_page_link=\"https://dev.zendesk.com/api/v2/users.json?page=3&per_page=1\"\r\n  [\r\n    <Zendesk2::Client::User\r\n      id=217761652,\r\n      url=\"https://dev.zendesk.com/api/v2/users/217761652.json\",\r\n      ...\r\n      name=\"Guy Dude\",\r\n      ...\r\n    >\r\n  ]\r\n```\r\n\r\n#### Models\r\n\r\nAll models respond to `destroy` and `save` if applicable.  `save` performs a 'create' operation if there is no identity provided or an 'update' if there is an identity.\r\n\r\n```ruby\r\nZendesk2::Client::Ticket.new.save        # performs a create\r\nZendesk2::Client::Ticket.new(id: 1).save # performs an update\r\n```\r\n\r\nAttributes can be enumerated by the `attributes` method.\r\n\r\n## Testing\r\n### Running\r\n\r\n    $ bundle exec rspec\r\n\r\n### Testing Live\r\n\r\nRun against a real Zendesk installation by setting ```MOCK_ZENDESK=false```\r\n\r\n    $ MOCK_ZENDESK=false bundle exec rspec\r\n\r\nCredentials are sourced from your ```~/.zendesk2``` file\r\n\r\nRaw responses and requests can be echoed to STDOUT by adding ```VERBOSE=true```\r\n\r\n    $ VERBOSE=true bundle exec rspec\r\n\r\n## Releasing\r\n\r\n    $ gem install gem-release\r\n    $ gem bump -trv (major|minor|patch)\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Added some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}